{"version":3,"sources":["src/room-store.js","src/directions.js","src/segment-train.js","src/tile-paths2.js","src/index.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["RoomStore","constructor","numCols","numRows","isLoaded","roomName","roomNumber","_tileCodeRows","_version","_getRequestInFlight","_targetRoomNumber","_unsavedEdits","_inFlightEdits","window","setInterval","_handleAmbientTick","bind","length","xhr","XMLHttpRequest","open","editRequest","_buildEditRequest","setRequestHeader","self","onload","status","concat","send","JSON","stringify","isSaved","roomResponse","parse","responseText","_handleRoomResponse","name","number","tileCodeRows","version","changeRoom","roomNum","getTileCode","row","col","Error","editTileCode","newTileCode","_replaceCharInStr","push","x","y","tileCode","existingVersion","tileEdits","slice","optionalNewName","str","index","replacement","substr","None","All","areEqual","dirA","dirB","fromCardinal","cardinal","toCardinal","dir","isNone","isVertical","isHorizontal","isDiagonal","toOrdinal","fromOrdinal","num","toRadians","Math","PI","fromArrows","left","right","up","down","isSameOrNextTo","ordA","ordB","actsOn","motionDir","pathDir","effect","reverse","rotateClockwise","numPoints","andEitherSide","chebyshevDistanceBetween","posA","posB","max","abs","euclideanDistanceBetween","sqrt","pow","bestDirBetween","fromPos","toPos","idealDist","bestDist","undefined","bestDir","tryDir","tryPos","translateChebyshev","tryDist","pos","distance","translateEuclidean","isOnLine","linePointPos","lineDir","tolerance","snappedPos","snapToLine","snapDist","addVec","a","b","subVec","scaleVec","v","s","relPos","snappedRelPos","mean","module","exports","directions","require","SegmentTrain","headPose","_history","maxSegments","_segmentDistance","_historyDistanceNeeded","_epsilon","fakeOldHeadPose","backwardsDir","fakeDistanceSinceLast","fakeTotalDistance","unshift","normal","reportCurrentHeadPose","pose","lastEntry","lastPose","distanceSinceLast","getSegmentPoses","numSegments","segmentPoses","totalDistance","numEntries","entryIdx","entry","targetDistance","prevTotalDistance","prevPose","_interpolatePose","fakePoseBetterThanNothing","epsilon","quantize","tileSettings","currentPos","tileSize","tileCoords","floor","tileRelativePos","tileOriginPos","move","currentPose","tileCodeProvider","motionDistance","moves","computeMoves","idealPos","bestMove","tryMove","getTilePaths","minDist","tileSizeMinusMinDist","tilePaths","tileRelativeLinePos","startToEndDir","computeMovesR","originalPose","dubiousTileRelativePos","depth","tileCodeAt","tilePath","tileMoveSnapTolerance","snapTolerance","maybeSnapToTilePath","remainingMotionDistance","possibleDirs","possibleDir","tileMoveResult","maybeMoveInTilePath","achievedMotionDistance","stillRemainingMotionDistance","tileMoveResultToMoveResult","foundMoreMoves","ndtrp","generateNeighbouringDubiousTileRelativePositions","moreMoves","effectOfMotion","unclippedNewTileRelativePos","distTooFar","outOfTileBy","newTileRelativePos","offsetCoords","oppositeOffsetRelativePos","otherTileCoords","otherTileRelativePos","unclippedSnappedTileRelativePos","outOfBoundsBy","tileRelativeCentrePos","backInBoundsDir","backInBoundsTileRelativePos","reSnappedTileRelativePos","outOfTileByComponent","tileRelativePosComponent","roomStore","editMode","topBarSize","bottomBarSize","currentVelocity","segmentTrain","initialVelocity","maxVelocity","myGamePiece1","myGamePiece2","myScore","myControlUp","myControlLeft","myControlRight","myControlDown","controlStates","keyMap","k37","k39","k38","k40","tileCodeToTileNum","startGame","addEventListener","e","myGameArea","keys","inputCode","keyCode","control","preventDefault","component","start","canvas","document","createElement","touchPositions","mousePosition","width","height","context","getContext","body","insertBefore","getElementById","frameNo","interval","updateGameArea","getPointerPos","mousePos","buttons","i","targetTouches","clear","clearRect","stop","clearInterval","pointerEvent","rect","getBoundingClientRect","clientX","clientY","top","type","color","text","spriteX","spriteY","spriteScale","angle","flip","update","ctx","font","fillStyle","fillText","img","save","imageSmoothingEnabled","translate","rotate","scale","drawImage","restore","fillRect","isClicked","touchPosition","touching","crashWith","otherobj","myleft","myright","mytop","mybottom","otherleft","otherright","othertop","otherbottom","crash","drawTiles","tileNum","tx","ty","tileComp","tileChooserCurrentCode","tileChooserCodes","drawTileChooser","tileBorderColour","tileBorder","drawChosenTile","newPose","poseComponent","segmentPose","centrePos","everyinterval","n","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","appendChild","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export default class RoomStore {\r\n\r\n  constructor() {\r\n    this.numCols = 42;\r\n    this.numRows = 20;\r\n    this.isLoaded = false;\r\n    this.roomName = '';\r\n    this.roomNumber = '';\r\n    this._tileCodeRows = null;\r\n    this._version = 0;\r\n    this._getRequestInFlight = false;\r\n    this._targetRoomNumber = '';\r\n    this._unsavedEdits = [];\r\n    this._inFlightEdits = [];\r\n    window.setInterval(this._handleAmbientTick.bind(this), 1000);\r\n  }\r\n\r\n  _handleAmbientTick() {\r\n    if (this._unsavedEdits.length > 0 && this._inFlightEdits.length === 0) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open('PUT', 'https://antr.io/rooms/' + this.roomNumber);\r\n      let editRequest = this._buildEditRequest();\r\n      this._inFlightEdits = this._unsavedEdits;\r\n      this._unsavedEdits = [];\r\n      xhr.setRequestHeader('Content-Type', 'application/json');\r\n      let self = this;\r\n      xhr.onload = function() {\r\n        if (xhr.status === 204) {\r\n          self._inFlightEdits = [];\r\n          self._version++;\r\n        } else {\r\n          self._unsavedEdits = self._inFlightEdits.concat(self._unsavedEdits);\r\n          self._inFlightEdits = [];\r\n        }\r\n      };\r\n      xhr.send(JSON.stringify(editRequest));\r\n      return;\r\n    }\r\n    if (this._targetRoomNumber !== this.roomNumber && !this._getRequestInFlight && this.isSaved()) {\r\n      this.isLoaded = false;\r\n      this.roomName = 'Loading ...';\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open('GET', 'https://antr.io/rooms/' + this._targetRoomNumber);\r\n      xhr.setRequestHeader('Content-Type', 'application/json');\r\n      let self = this;\r\n      xhr.onload = function() {\r\n        if (xhr.status === 200) {\r\n          let roomResponse = JSON.parse(xhr.responseText);\r\n          self._handleRoomResponse(roomResponse);\r\n        }\r\n        self._getRequestInFlight = false;\r\n      };\r\n      this._getRequestInFlight = true;\r\n      xhr.send();\r\n      return;\r\n    }\r\n  }\r\n\r\n  _handleRoomResponse(roomResponse) {\r\n    this.roomName = roomResponse.name;\r\n    this.roomNumber = roomResponse.number;\r\n    this._tileCodeRows = roomResponse.tileCodeRows;\r\n    this._version = roomResponse.version;\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  isSaved() {\r\n    return this._unsavedEdits.length === 0 && this._inFlightEdits.length === 0;\r\n  }\r\n\r\n  changeRoom(roomNum) {\r\n    let roomNumber = '' + roomNum;\r\n    this._targetRoomNumber = roomNumber;\r\n    this.isLoaded = false;\r\n    this.roomName = 'Loading ...';\r\n  }\r\n\r\n  getTileCode(row, col) {\r\n    if (!this.isLoaded) {\r\n      throw new Error('cannot get tiles for room that has not loaded');\r\n    }\r\n    return this._tileCodeRows[row][col];\r\n  }\r\n\r\n  editTileCode(row, col, newTileCode) {\r\n    if (!this.isLoaded) {\r\n      throw new Error('cannot edit room that has not loaded');\r\n    }\r\n    // TODO - check bounds?\r\n    this._tileCodeRows[row] = this._replaceCharInStr(this._tileCodeRows[row], col, newTileCode);\r\n    this._unsavedEdits.push({\r\n      x: col,\r\n      y: row,\r\n      tileCode: newTileCode\r\n    })\r\n  }\r\n\r\n  _buildEditRequest() {\r\n    return {\r\n      number: this.roomNumber,\r\n      existingVersion: this._version,\r\n      tileEdits: this._unsavedEdits.slice(),\r\n      optionalNewName: null\r\n    }\r\n  }\r\n\r\n  _replaceCharInStr(str, index, replacement) {\r\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\r\n  }\r\n\r\n}\r\n","/*\r\n * antR.io uses a slightly unusual geometry (sometimes called Chebyshev distance or chess-board distance) where:\r\n *  1) the only movement directions are the 8 cardinal compass points (N, NE, E, SE, S, SW, W, NW)\r\n *     (well, and there's a 'Z' to represent not moving at all - not sure how useful really)\r\n *  2) moving one unit NE is the same as moving one unit N and one unit E\r\n *     (e.g. moving from [1,1] to [3,3] is the same distance as moving from [1,1] to [3,1])\r\n*/\r\n\r\nconst None = 'Z';\r\n\r\nconst All = ['Z','N','NE','E','SE','S','SW','W','NW'];\r\n\r\nfunction areEqual(dirA, dirB) {\r\n  return dirA === dirB;\r\n}\r\n\r\nfunction fromCardinal(cardinal) {\r\n  switch (cardinal) {\r\n    case 'N':\r\n    case 'NE':\r\n    case 'E':\r\n    case 'SE':\r\n    case 'S':\r\n    case 'SW':\r\n    case 'W':\r\n    case 'NW':\r\n    case 'Z':\r\n      return cardinal;\r\n    default: throw new Error('unsupported direction ' + cardinal);\r\n  }\r\n}\r\n\r\nfunction toCardinal(dir) {\r\n  return dir;\r\n}\r\n\r\nfunction isNone(dir) {\r\n  return dir === 'Z';\r\n}\r\n\r\nfunction isVertical(dir) {\r\n  return dir === 'N' || dir === 'S';\r\n}\r\n\r\nfunction isHorizontal(dir) {\r\n  return dir === 'E' || dir === 'W';\r\n}\r\n\r\nfunction isDiagonal(dir) {\r\n  return dir === 'NE' || dir === 'SE' || dir === 'SW' || dir === 'NW';\r\n}\r\n\r\nfunction toOrdinal(dir) {\r\n  switch (dir) {\r\n    case 'N':  return 0;\r\n    case 'NE': return 1;\r\n    case 'E':  return 2;\r\n    case 'SE': return 3;\r\n    case 'S':  return 4;\r\n    case 'SW': return 5;\r\n    case 'W':  return 6;\r\n    case 'NW': return 7;\r\n    default: throw new Error('unsupported direction ' + dir);\r\n  }\r\n}\r\n\r\nfunction fromOrdinal(num) {\r\n  if (num < -8 || num > 15) {\r\n    throw new Error('out of range');\r\n  }\r\n  if (num < 0) {\r\n    num += 8;\r\n  } else if (num >= 8) {\r\n    num -= 8;\r\n  }\r\n  switch (num) {\r\n    case 0: return 'N';\r\n    case 1: return 'NE';\r\n    case 2: return 'E';\r\n    case 3: return 'SE';\r\n    case 4: return 'S';\r\n    case 5: return 'SW';\r\n    case 6: return 'W';\r\n    case 7: return 'NW';\r\n    default: throw new Error('unsupported ordinal ' + num);\r\n  }\r\n}\r\n\r\nfunction toRadians(dir) {\r\n  return (toOrdinal(dir) - 2) / 8.0 * Math.PI * 2.0;\r\n}\r\n\r\nfunction fromArrows(left, right, up, down) {\r\n  if (left && !right && !up && !down) {\r\n    return 'W';\r\n  } else if (!left && right && !up && !down) {\r\n    return 'E';\r\n  } else if (!left && !right && up && !down) {\r\n    return 'N';\r\n  } else if (left && !right && up && !down) {\r\n    return 'NW';\r\n  } else if (!left && right && up && !down) {\r\n    return 'NE';\r\n  } else if (!left && !right && !up && down) {\r\n    return 'S';\r\n  } else if (left && !right && !up && down) {\r\n    return 'SW';\r\n  } else if (!left && right && !up && down) {\r\n    return 'SE';\r\n  }\r\n  return 'Z';\r\n}\r\n\r\nfunction isSameOrNextTo(dirA, dirB) {\r\n  if (dirA === dirB) {\r\n    return true;\r\n  }\r\n  if (isNone(dirA) || isNone(dirB)) {\r\n    return false;\r\n  }\r\n  const ordA = toOrdinal(dirA);\r\n  const ordB = toOrdinal(dirB);\r\n  return ((ordA + 1) % 8) == ordB || ((ordB + 1) % 8) == ordA;\r\n}\r\n\r\nfunction actsOn(motionDir, pathDir) {\r\n  if (isSameOrNextTo(motionDir, pathDir)) {\r\n    return {\r\n      effect: 1,\r\n      dir: pathDir\r\n    };\r\n  } else if (isSameOrNextTo(reverse(motionDir), pathDir)) {\r\n    return {\r\n      effect: -1,\r\n      dir: reverse(pathDir)\r\n    };\r\n  } else {\r\n    return {\r\n      effect: 0,\r\n      dir: None\r\n    };\r\n  }\r\n}\r\n\r\nfunction reverse(dir) {\r\n  return rotateClockwise(dir, 4);\r\n}\r\n\r\nfunction rotateClockwise(dir, numPoints) {\r\n  if (numPoints < -8 || numPoints > 8) {\r\n    throw new Error('out of range');\r\n  }\r\n  if (isNone(dir)) {\r\n    return dir;\r\n  }\r\n  return fromOrdinal(toOrdinal(dir) + numPoints);\r\n}\r\n\r\nfunction andEitherSide(dir) {\r\n  if (isNone(dir)) {\r\n    return [dir];\r\n  }\r\n  return [\r\n    dir,\r\n    rotateClockwise(dir, -1),\r\n    rotateClockwise(dir, +1)\r\n  ];\r\n}\r\n\r\n// distance is never negative\r\nfunction chebyshevDistanceBetween(posA, posB) {\r\n  return Math.max(Math.abs(posA[0] - posB[0]), Math.abs(posA[1] - posB[1]));\r\n}\r\n\r\n// back in the real-world, how far is it between two points?\r\nfunction euclideanDistanceBetween(posA, posB) {\r\n  return Math.sqrt(Math.pow(posA[0] - posB[0], 2) + Math.pow(posA[1] - posB[1], 2));\r\n}\r\n\r\n// the direction to move from fromPos to get closest to toPos\r\nfunction bestDirBetween(fromPos, toPos) {\r\n  const idealDist = chebyshevDistanceBetween(fromPos, toPos);\r\n  let bestDist = undefined;\r\n  let bestDir = undefined;\r\n  for (let tryDir of All) {\r\n    let tryPos = translateChebyshev(fromPos, tryDir, idealDist);\r\n    let tryDist = chebyshevDistanceBetween(tryPos, toPos);\r\n    if (!bestDir || tryDist < bestDist) {\r\n      bestDist = tryDist;\r\n      bestDir = tryDir;\r\n    }\r\n  }\r\n  return bestDir;\r\n}\r\n\r\n// distance can be negative (moves in reverse direction)\r\nfunction translateChebyshev(pos, dir, distance) {\r\n  switch (dir) {\r\n    case 'Z':  return [pos[0],pos[1]];\r\n    case 'N':  return [pos[0],pos[1]+distance];\r\n    case 'NE': return [pos[0]+distance,pos[1]+distance];\r\n    case 'E':  return [pos[0]+distance,pos[1]];\r\n    case 'SE': return [pos[0]+distance,pos[1]-distance];\r\n    case 'S':  return [pos[0],pos[1]-distance];\r\n    case 'SW': return [pos[0]-distance,pos[1]-distance];\r\n    case 'W':  return [pos[0]-distance,pos[1]];\r\n    case 'NW': return [pos[0]-distance,pos[1]+distance];\r\n    default: throw new Error('unsupported direction ' + dir);\r\n  }\r\n}\r\n\r\n// distance can be negative (moves in reverse direction)\r\nfunction translateEuclidean(pos, dir, distance) {\r\n  return translateChebyshev(pos, dir, isDiagonal(dir) ? distance * Math.sqrt(2) * 0.5: distance);\r\n}\r\n\r\nfunction isOnLine(linePointPos, lineDir, pos, tolerance) {\r\n  if (tolerance < 0) {\r\n    throw new Error('tolerance out of range');\r\n  }\r\n  const snappedPos = snapToLine(linePointPos, lineDir, pos);\r\n  const snapDist = chebyshevDistanceBetween(pos, snappedPos);\r\n  return snapDist < tolerance;\r\n}\r\n\r\nfunction addVec(a, b) {\r\n  return [a[0] + b[0], a[1] + b[1]];\r\n}\r\n\r\nfunction subVec(a, b) {\r\n  return [a[0] - b[0], a[1] - b[1]];\r\n}\r\n\r\nfunction scaleVec(v, s) {\r\n  return [v[0] * s, v[1] * s];\r\n}\r\n\r\nfunction snapToLine(linePointPos, lineDir, pos) {\r\n  const relPos = subVec(pos, linePointPos);\r\n  let snappedRelPos = undefined;\r\n  switch (lineDir) {\r\n    case 'Z': snappedRelPos = [0, 0]; break;\r\n    case 'N':  \r\n    case 'S': snappedRelPos = [0, relPos[1]]; break;\r\n    case 'E':  \r\n    case 'W': snappedRelPos = [relPos[0], 0]; break;\r\n    case 'NE': \r\n    case 'SW':\r\n      {\r\n        const mean = 0.5 * (relPos[0] + relPos[1]);\r\n        snappedRelPos = [mean, mean];\r\n        break;\r\n      }\r\n    case 'NW': \r\n    case 'SE':\r\n      {\r\n        const mean = 0.5 * (relPos[0] - relPos[1]);\r\n        snappedRelPos = [mean, -mean];\r\n        break;\r\n      }\r\n    default: throw new Error('bad direction ' + lineDir);\r\n  }\r\n  return addVec(snappedRelPos, linePointPos);\r\n}\r\n\r\nmodule.exports = {\r\n  None: None,\r\n  All: All,\r\n  areEqual: areEqual,\r\n  fromCardinal: fromCardinal,\r\n  fromArrows: fromArrows,\r\n  toCardinal: toCardinal,\r\n  toRadians: toRadians,\r\n  isNone: isNone,\r\n  isVertical: isVertical,\r\n  isHorizontal: isHorizontal,\r\n  isDiagonal: isDiagonal,\r\n  actsOn: actsOn,\r\n  reverse: reverse,\r\n  rotateClockwise: rotateClockwise,\r\n  andEitherSide: andEitherSide,\r\n  translateChebyshev: translateChebyshev,\r\n  translateEuclidean: translateEuclidean,\r\n  chebyshevDistanceBetween: chebyshevDistanceBetween,\r\n  euclideanDistanceBetween: euclideanDistanceBetween,\r\n  bestDirBetween: bestDirBetween,\r\n  snapToLine: snapToLine,\r\n  isOnLine: isOnLine,\r\n  addVec: addVec,\r\n  subVec: subVec,\r\n  scaleVec: scaleVec\r\n};\r\n","const directions = require('./directions');\r\n\r\nclass SegmentTrain {\r\n\r\n  constructor(headPose) {\r\n\r\n    this._history = [];\r\n    const maxSegments = 5;\r\n    this._segmentDistance = 10;\r\n    this._historyDistanceNeeded = this._segmentDistance * (1 + maxSegments);\r\n    this._epsilon = 1e-8;\r\n\r\n    // Pretend the head moved in a straight-line to get to the initial pose.\r\n    let fakeOldHeadPose = headPose;\r\n    let backwardsDir = directions.reverse(headPose.dir);\r\n    let fakeDistanceSinceLast = 1;\r\n    for (let fakeTotalDistance = 0; fakeTotalDistance < this._historyDistanceNeeded; fakeTotalDistance += fakeDistanceSinceLast) {\r\n      this._history.unshift([fakeDistanceSinceLast, fakeOldHeadPose]);\r\n      fakeOldHeadPose = {\r\n        pos: directions.translateChebyshev(fakeOldHeadPose.pos, backwardsDir, 1),\r\n        dir: headPose.dir,\r\n        normal: headPose.normal\r\n      }\r\n    }\r\n    //console.log(this._history);\r\n  }\r\n\r\n  reportCurrentHeadPose(pose) {\r\n    const lastEntry = this._history[this._history.length - 1];\r\n    const lastPose = lastEntry[1];\r\n    //console.log(this._history.length, lastPose, pose);\r\n    const distanceSinceLast = directions.euclideanDistanceBetween(lastPose.pos, pose.pos);\r\n    if (distanceSinceLast < this._epsilon) {\r\n      return;\r\n    }\r\n    this._history.push([distanceSinceLast, pose]);\r\n    // TODO - need some way to purge if too long\r\n  }\r\n\r\n  getSegmentPoses(numSegments) {\r\n    const segmentPoses = [];\r\n    let totalDistance = 0;\r\n    let pose = undefined;\r\n    let numEntries = this._history.length;\r\n    for (let entryIdx = numEntries-1; entryIdx >= 0; entryIdx--) {\r\n      if (segmentPoses.length === numSegments) {\r\n        break;\r\n      }\r\n      let entry = this._history[entryIdx];\r\n      let targetDistance = this._segmentDistance * (1.5 + segmentPoses.length);\r\n      let prevTotalDistance = totalDistance;\r\n      let prevPose = pose;\r\n      let distance = entry[0];\r\n      pose = entry[1];\r\n      totalDistance += distance;\r\n      if (prevTotalDistance <= targetDistance && totalDistance >= targetDistance) {\r\n        segmentPoses.push(this._interpolatePose(prevPose, pose, prevTotalDistance, totalDistance, targetDistance));\r\n      }\r\n    }\r\n    while (segmentPoses.length < numSegments) {\r\n      const fakePoseBetterThanNothing = pose;\r\n      segmentPoses.push(fakePoseBetterThanNothing);\r\n    }\r\n    return segmentPoses;\r\n  }\r\n\r\n  // TODO - this isn't very good interpolation\r\n  _interpolatePose(prevPose, pose, prevTotalDistance, totalDistance, targetDistance) {\r\n    return prevPose;\r\n  }\r\n\r\n}\r\n\r\nmodule.exports = SegmentTrain;","const directions = require('./directions');\r\n\r\nconst epsilon = 1e-8;\r\n\r\nfunction quantize(tileSettings, currentPos) {\r\n  const tileSize = tileSettings.tileSize;\r\n  const tileCoords = [ Math.floor(currentPos[0] / tileSize), Math.floor(currentPos[1] / tileSize) ];\r\n  const tileRelativePos = [ currentPos[0] - (tileCoords[0] * tileSize), currentPos[1] - (tileCoords[1] * tileSize) ];\r\n  const tileOriginPos = directions.scaleVec(tileCoords, tileSize);\r\n  return [tileCoords, tileRelativePos, tileOriginPos];\r\n}\r\n\r\nfunction move(currentPose, tileSettings, tileCodeProvider, motionDir, motionDistance) {\r\n  const moves = computeMoves(currentPose, tileSettings, tileCodeProvider, motionDir, motionDistance);\r\n  const idealPos = directions.translateChebyshev(currentPose.pos, motionDir, motionDistance);\r\n  let bestDist = undefined;\r\n  let bestMove = undefined;\r\n  for (let tryMove of moves.concat([currentPose])) {\r\n    let tryDist = directions.chebyshevDistanceBetween(tryMove.pos, idealPos);\r\n    if (!bestMove || tryDist < bestDist) {\r\n      bestDist = tryDist;\r\n      bestMove = tryMove;\r\n    }\r\n  }\r\n  return bestMove;\r\n}\r\n\r\nfunction getTilePaths(tileSettings, tileCode) {\r\n  const tileSize = tileSettings.tileSize;\r\n  const minDist = tileSettings.minDist;\r\n  const tileSizeMinusMinDist = tileSize - minDist;\r\n  let tilePaths = [];\r\n  if (tileCode === 'v') { // grass-at-top\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [0, tileSizeMinusMinDist],\r\n      startToEndDir: directions.fromCardinal('E')\r\n    } ]\r\n  } else if (tileCode === 'q') { // grass-at-right\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [tileSizeMinusMinDist, tileSize],\r\n      startToEndDir: directions.fromCardinal('S')\r\n    } ]\r\n  } else if (tileCode === 'm') { // grass-at-bottom\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [tileSize, minDist],\r\n      startToEndDir: directions.fromCardinal('W')\r\n    } ]\r\n  } else if (tileCode === 'p') { // grass-at-left\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [minDist, 0],\r\n      startToEndDir: directions.fromCardinal('N')\r\n    } ]\r\n  } else if (tileCode === 'w') { // grass-up-and-right-above\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [0, 0],\r\n      startToEndDir: directions.fromCardinal('NE')\r\n    } ]\r\n  } else if (tileCode === 'u') { // grass-down-and-right-above\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [0, tileSize],\r\n      startToEndDir: directions.fromCardinal('SE')\r\n    } ]\r\n  } else if (tileCode === 'l') { // grass-down-and-left-below\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [tileSize, tileSize],\r\n      startToEndDir: directions.fromCardinal('SW')\r\n    } ]\r\n  } else if (tileCode === 'n') { // grass-up-and-left-below\r\n    tilePaths = [ {\r\n      tileRelativeLinePos: [tileSize, 0],\r\n      startToEndDir: directions.fromCardinal('NW')\r\n    } ]\r\n  }\r\n  return tilePaths;\r\n}\r\n\r\nfunction computeMoves(currentPose, tileSettings, tileCodeProvider, motionDir, motionDistance) {\r\n  const [tileCoords, tileRelativePos, tileOriginPos] = quantize(tileSettings, currentPose.pos);\r\n  return computeMovesR(currentPose, tileSettings, tileCodeProvider, tileCoords, tileRelativePos, tileOriginPos, motionDir, motionDistance, 0);\r\n}\r\n\r\nfunction computeMovesR(originalPose, tileSettings, tileCodeProvider, tileCoords, dubiousTileRelativePos, tileOriginPos, motionDir, motionDistance, depth) {\r\n  if (motionDistance < -epsilon) {\r\n    throw new Error('motionDistance cannot be negative');\r\n  }\r\n  if (motionDistance < tileSettings.minDist) {\r\n    return [];\r\n  }\r\n  if (directions.isNone(motionDir)) {\r\n    return [];\r\n  }\r\n  const tileCode = tileCodeProvider.tileCodeAt(tileCoords);\r\n  const tilePaths = getTilePaths(tileSettings, tileCode);\r\n  if (tilePaths.length < 1) {\r\n    return [];\r\n  }\r\n  if (tilePaths.length > 1) {\r\n    throw new Error('multiple paths in one tile not supported');\r\n  }\r\n  const tilePath = tilePaths[0];\r\n  const tileMoveSnapTolerance = tileSettings.minDist * 2 + epsilon;\r\n  const snapTolerance = depth == 0 ? epsilon : tileMoveSnapTolerance;\r\n  const tileRelativePos = maybeSnapToTilePath(tileSettings, tilePath, dubiousTileRelativePos, snapTolerance);\r\n  if (!tileRelativePos) {\r\n    return [];\r\n  }\r\n  const snapDist = directions.chebyshevDistanceBetween(dubiousTileRelativePos, tileRelativePos);\r\n  if (snapDist > motionDistance) {\r\n    return [];\r\n  }\r\n  let remainingMotionDistance = motionDistance - snapDist;\r\n  const moves = [];\r\n  const possibleDirs = directions.andEitherSide(motionDir);\r\n  for (let possibleDir of possibleDirs) {\r\n    let tileMoveResult = maybeMoveInTilePath(tileSettings, tilePath, tileRelativePos, possibleDir, remainingMotionDistance);\r\n    if (!tileMoveResult) {\r\n      tileMoveResult = {\r\n        tileRelativePos: tileRelativePos,\r\n        dir: originalPose.dir,\r\n        normal: directions.rotateClockwise(tilePath.startToEndDir, -2)\r\n      };\r\n    }\r\n    let achievedMotionDistance = directions.chebyshevDistanceBetween(tileRelativePos, tileMoveResult.tileRelativePos);\r\n    let stillRemainingMotionDistance = remainingMotionDistance - achievedMotionDistance;\r\n    if (stillRemainingMotionDistance < tileSettings.minDist + epsilon) {\r\n      moves.push(tileMoveResultToMoveResult(tileMoveResult, tileOriginPos));\r\n      continue;\r\n    }\r\n    let foundMoreMoves = false;\r\n    if (depth == 0) {\r\n      for (let ndtrp of generateNeighbouringDubiousTileRelativePositions(tileSettings, tileCoords, tileMoveResult.tileRelativePos)) {\r\n        let moreMoves = computeMovesR(originalPose, tileSettings, tileCodeProvider,\r\n          ndtrp.tileCoords,\r\n          ndtrp.dubiousTileRelativePos,\r\n          ndtrp.tileOriginPos,\r\n          motionDir, stillRemainingMotionDistance, depth + 1);\r\n        if (moreMoves.length > 0) {\r\n          foundMoreMoves = true;\r\n          moves.push(...moreMoves);\r\n        }\r\n      }\r\n    }\r\n    // TODO - maybe we should just always do this and let move choose the best ?\r\n    if (!foundMoreMoves) {\r\n      moves.push(tileMoveResultToMoveResult(tileMoveResult, tileOriginPos));\r\n    }\r\n  }\r\n  return moves;\r\n}\r\n\r\nfunction tileMoveResultToMoveResult(tileMoveResult, tileOriginPos) {\r\n  return {\r\n    pos: addVec(tileOriginPos, tileMoveResult.tileRelativePos),\r\n    dir: tileMoveResult.dir,\r\n    normal: tileMoveResult.normal\r\n  }\r\n}\r\n\r\nfunction addVec(posA, posB) {\r\n  return [posA[0] + posB[0], posA[1] + posB[1]];\r\n}\r\n\r\nfunction maybeMoveInTilePath(tileSettings, tilePath, tileRelativePos, motionDir, motionDistance) {\r\n  if (motionDistance < -epsilon) {\r\n    throw new Error('motionDistance cannot be negative');\r\n  }\r\n  if (motionDistance < tileSettings.minDist) {\r\n    return undefined;\r\n  }\r\n  if (directions.isNone(motionDir)) {\r\n    return undefined;\r\n  }\r\n  const effectOfMotion = directions.actsOn(motionDir, tilePath.startToEndDir);\r\n  if (effectOfMotion.effect == 0) {\r\n    return undefined;\r\n  }\r\n  const unclippedNewTileRelativePos = directions.translateChebyshev(tileRelativePos, effectOfMotion.dir, motionDistance);\r\n  const distTooFar = outOfTileBy(tileSettings, unclippedNewTileRelativePos);\r\n  const newTileRelativePos = directions.translateChebyshev(unclippedNewTileRelativePos, effectOfMotion.dir, -distTooFar);\r\n  return {\r\n    tileRelativePos: newTileRelativePos,\r\n    dir: effectOfMotion.dir,\r\n    normal: directions.rotateClockwise(tilePath.startToEndDir, -2)\r\n  }\r\n}\r\n\r\nfunction* generateNeighbouringDubiousTileRelativePositions(tileSettings, tileCoords, tileRelativePos) {\r\n  for (let dir of directions.All) {\r\n    if (directions.isNone(dir)) {\r\n      continue;\r\n    }\r\n    let offsetCoords = directions.translateChebyshev([0,0], dir, 1);\r\n    let oppositeOffsetRelativePos = directions.translateChebyshev([0,0], dir, -tileSettings.tileSize);\r\n    let otherTileCoords = directions.addVec(tileCoords, offsetCoords);\r\n    let otherTileRelativePos = directions.addVec(tileRelativePos, oppositeOffsetRelativePos);\r\n    yield {\r\n      tileCoords: otherTileCoords,\r\n      dubiousTileRelativePos: otherTileRelativePos,\r\n      tileOriginPos: directions.scaleVec(otherTileCoords, tileSettings.tileSize)\r\n    };\r\n  }\r\n}\r\n\r\nfunction maybeSnapToTilePath(tileSettings, tilePath, dubiousTileRelativePos, tolerance) {\r\n  const unclippedSnappedTileRelativePos = directions.snapToLine(tilePath.tileRelativeLinePos, tilePath.startToEndDir, dubiousTileRelativePos);\r\n  const outOfBoundsBy = outOfTileBy(tileSettings, unclippedSnappedTileRelativePos);\r\n  // TODO - using the centre is a bit questionable\r\n  const tileRelativeCentrePos = [0.5 * tileSettings.tileSize, 0.5 * tileSettings.tileSize];\r\n  const backInBoundsDir = directions.bestDirBetween(unclippedSnappedTileRelativePos, tileRelativeCentrePos);\r\n  const backInBoundsTileRelativePos = directions.translateChebyshev(unclippedSnappedTileRelativePos, backInBoundsDir, outOfBoundsBy);\r\n  const reSnappedTileRelativePos = directions.snapToLine(tilePath.tileRelativeLinePos, tilePath.startToEndDir, backInBoundsTileRelativePos);\r\n  const snapDist = directions.chebyshevDistanceBetween(dubiousTileRelativePos, reSnappedTileRelativePos);\r\n  if (snapDist < tolerance) {\r\n    return reSnappedTileRelativePos;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction outOfTileBy(tileSettings, tileRelativePos) {\r\n  return Math.max(outOfTileByComponent(tileSettings, tileRelativePos[0]), outOfTileByComponent(tileSettings, tileRelativePos[1]));\r\n}\r\n\r\nfunction outOfTileByComponent(tileSettings, tileRelativePosComponent) {\r\n  // TODO - should this be minDist or epsilon?\r\n  const tileSizeMinusMinDist = tileSettings.tileSize - tileSettings.minDist;\r\n  if (tileRelativePosComponent < 0) {\r\n    return 0 - tileRelativePosComponent;\r\n  }\r\n  if (tileRelativePosComponent > tileSizeMinusMinDist) {\r\n    return tileRelativePosComponent - tileSizeMinusMinDist;\r\n  }\r\n  return 0;\r\n}\r\n\r\nmodule.exports = {\r\n  quantize: quantize,\r\n  move: move,\r\n  computeMoves: computeMoves\r\n};\r\n","import RoomStore from './room-store.js';\r\nconst SegmentTrain = require('./segment-train.js');\r\nconst tilePaths = require('./tile-paths2');\r\nconst directions = require('./directions');\r\n\r\nconst roomStore = new RoomStore();\r\nlet editMode = false;\r\n\r\nconst topBarSize = 28;\r\nconst bottomBarSize = 28;\r\nconst tileSize = 16;\r\nconst tileSettings = {\r\n  tileSize: tileSize,\r\n  minDist: 0.01\r\n};\r\n\r\nlet currentPose = {\r\n  pos: [160, 96 - tileSettings.minDist],\r\n  dir: directions.fromCardinal('E'),\r\n  normal: directions.fromCardinal('N'),\r\n};\r\nlet currentVelocity = 0.0;\r\nconst segmentTrain = new SegmentTrain(currentPose);\r\n\r\nconst initialVelocity = 1.0;\r\nconst maxVelocity = 2.5;\r\nconst tileCodeProvider = {\r\n  tileCodeAt: function (tileCoords) {\r\n    const col = tileCoords[0];\r\n    const row = roomStore.numRows - tileCoords[1] - 1;\r\n    const tileCode = roomStore.getTileCode(row, col);\r\n    return tileCode;\r\n  }\r\n};\r\n\r\nlet myGamePiece1 = undefined;\r\nlet myGamePiece2 = undefined;\r\nlet myScore = undefined;\r\nlet myControlUp = undefined;\r\nlet myControlLeft = undefined;\r\nlet myControlRight = undefined;\r\nlet myControlDown = undefined;\r\n\r\nconst controlStates = {}; \r\nconst keyMap = {\r\n  k37: \"left\",\r\n  k39: \"right\",\r\n  k38: \"up\",\r\n  k40: \"down\"\r\n};\r\nconst tileCodeToTileNum = {\r\n  \" \" : 1,\r\n  \".\" : 2,\r\n  \"l\" : 9,\r\n  \"m\" : 5,\r\n  \"n\" : 10,\r\n  \"q\" : 4,\r\n  \"p\" : 6,\r\n  \"u\" : 8,\r\n  \"v\" : 3,\r\n  \"w\" : 7\r\n};\r\n\r\nfunction startGame() {\r\n  roomStore.changeRoom(5050);\r\n  window.addEventListener(\"keydown\", function (e) {\r\n    myGameArea.keys = (myGameArea.keys || []);\r\n    var inputCode = [\"k\" + e.keyCode];\r\n    var control = keyMap[inputCode];\r\n    if (control) {\r\n      controlStates[control] = true;\r\n      e.preventDefault();\r\n    }\r\n  });\r\n  window.addEventListener(\"keyup\", function (e) {\r\n    if (e.keyCode === 69) { // key e\r\n      editMode = !editMode;\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n    var control = keyMap[\"k\" + e.keyCode];\r\n    if (control) {\r\n      controlStates[control] = false;\r\n      e.preventDefault();\r\n    }\r\n  });\r\n  myGamePiece1 = new component(0, 0, 16, 18, \"sprite\", \"\", \"\", 1, 50, 1);\r\n  myGamePiece2 = new component(0, 0, 10, 18, \"sprite\", \"\", \"\", 21, 50, 1); // we fiddle with spriteX later\r\n  myScore = new component(16, 14, 0, 0, \"text\", \"black\", \"\");\r\n  myControlUp = new component(60, 240, 42, 42, \"sprite\", \"\", \"\", 52, 0, 2);\r\n  myControlLeft = new component(25, 275, 42, 44, \"sprite\", \"\", \"\", 10, 0, 2);\r\n  myControlRight = new component(95, 275, 42, 44, \"sprite\", \"\", \"\", 31, 0, 2);\r\n  myControlDown = new component(60, 310, 42, 42, \"sprite\", \"\", \"\", 74, 0, 2);\r\n  myGameArea.start();\r\n}\r\n\r\nconst myGameArea = {\r\n  canvas: document.createElement(\"canvas\"),\r\n  touchPositions: [],\r\n  mousePosition: null,\r\n  start : function() {\r\n    this.canvas.width = roomStore.numCols * tileSize;\r\n    this.canvas.height = topBarSize + roomStore.numRows * tileSize + bottomBarSize;\r\n    this.context = this.canvas.getContext(\"2d\");\r\n    document.body.insertBefore(this.canvas, document.getElementById(\"gameAreaHolder\"));\r\n\r\n    this.frameNo = 0;\r\n    this.interval = setInterval(updateGameArea, 30);\r\n    let self = this;\r\n    this.canvas.addEventListener(\"mousedown\", function (e) {\r\n      self.touchPositions = [ self.getPointerPos(e) ];\r\n      e.preventDefault();\r\n    }, false);\r\n    this.canvas.addEventListener(\"mouseup\", function (e) {\r\n      self.touchPositions = [];\r\n      e.preventDefault();\r\n    }, false);\r\n    this.canvas.addEventListener(\"mousemove\", function (e) {\r\n      var mousePos = self.getPointerPos(e);\r\n      self.mousePosition = mousePos;\r\n      if (e.buttons > 0) {\r\n        self.touchPositions = [ mousePos ];\r\n      }\r\n      e.preventDefault();\r\n    }, false);\r\n    this.canvas.addEventListener(\"touchstart\", function (e) {\r\n      self.touchPositions = [];\r\n      for (var i = 0; i < e.targetTouches.length; i++) {\r\n        self.touchPositions.push(self.getPointerPos(e.targetTouches[i]));\r\n      }\r\n      e.preventDefault();\r\n    }, false);\r\n    this.canvas.addEventListener(\"touchend\", function (e) {\r\n      self.touchPositions = [];\r\n      for (var i = 0; i < e.targetTouches.length; i++) {\r\n        self.touchPositions.push(self.getPointerPos(e.targetTouches[i]));\r\n      }\r\n      e.preventDefault();\r\n    }, false);\r\n    this.canvas.addEventListener(\"touchmove\", function (e) {\r\n      self.touchPositions = [];\r\n      for (var i = 0; i < e.targetTouches.length; i++) {\r\n        self.touchPositions.push(self.getPointerPos(e.targetTouches[i]));\r\n      }\r\n      e.preventDefault();\r\n    }, false);\r\n  },\r\n  clear : function() {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  },\r\n  stop : function() {\r\n    clearInterval(this.interval);\r\n  },\r\n  getPointerPos : function(pointerEvent) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    return {\r\n      x: pointerEvent.clientX - rect.left,\r\n      y: pointerEvent.clientY - rect.top\r\n    };\r\n  }\r\n}\r\n\r\nfunction component(x, y, width, height, type, color, text, spriteX, spriteY, spriteScale) {\r\n  this.body = null;\r\n  this.x = x;\r\n  this.y = y;\r\n  this.angle = 0;\r\n  this.flip = false;\r\n  this.width = width;\r\n  this.height = height;\r\n  this.type = type;\r\n  this.text = text;\r\n  this.color = color;\r\n  this.spriteX = spriteX;\r\n  this.spriteY = spriteY;\r\n  this.update = function() {\r\n    const ctx = myGameArea.context;\r\n    if (this.type == \"text\") {\r\n        ctx.font = \"18px Consolas\";\r\n        ctx.fillStyle = this.color;\r\n        ctx.fillText(this.text, this.x, this.y);\r\n    } else if (this.type == \"sprite\") {\r\n      var img = document.getElementById(\"sprites\");\r\n      ctx.save();\r\n      ctx.imageSmoothingEnabled = false;\r\n      ctx.translate(this.x,this.y);\r\n      ctx.rotate(this.angle);\r\n      if (this.flip) {\r\n        ctx.scale(1, -1);\r\n      }\r\n      ctx.drawImage(img,this.spriteX,this.spriteY,this.width/spriteScale,this.height/spriteScale,-this.width/2,-this.height/2,this.width,this.height);\r\n      ctx.restore();\r\n    } else if (this.type == \"rect\") {\r\n      ctx.save();\r\n      ctx.fillStyle = color;\r\n      ctx.translate(this.x,this.y);\r\n      ctx.rotate(this.angle);\r\n      ctx.fillRect(-this.width/2, -this.height/2, this.width, this.height);\r\n      ctx.restore();\r\n    }\r\n  };\r\n  this.isClicked = function() {\r\n    for (let i = 0; i < myGameArea.touchPositions.length; i++) {\r\n      let touchPosition = myGameArea.touchPositions[i];\r\n      let touching = this.crashWith({\r\n        x: touchPosition.x,\r\n        y: touchPosition.y,\r\n        width: 0.5,\r\n        height: 0.5,\r\n      });\r\n      if (touching) return true;\r\n    }\r\n    return false;\r\n  };\r\n  this.crashWith = function(otherobj) {\r\n    var myleft = this.x - this.width/2;\r\n    var myright = this.x + this.width/2;\r\n    var mytop = this.y - this.height/2;\r\n    var mybottom = this.y + this.height/2\r\n    var otherleft = otherobj.x - otherobj.width/2;\r\n    var otherright = otherobj.x + otherobj.width/2;\r\n    var othertop = otherobj.y - otherobj.height/2;\r\n    var otherbottom = otherobj.y + otherobj.height/2;\r\n    var crash = true;\r\n    if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {\r\n        crash = false;\r\n    }\r\n    return crash;\r\n  };\r\n}\r\n\r\nfunction drawTiles() {\r\n  for (var row = 0; row < roomStore.numRows; row++) {\r\n    for (var col = 0; col < roomStore.numCols; col++) {\r\n      var tileCode = roomStore.getTileCode(row, col);\r\n      var tileNum = tileCodeToTileNum[tileCode];\r\n      if (!tileNum) tileNum = 1;\r\n      var tx = col * tileSize + tileSize/2;\r\n      var ty = topBarSize + row * tileSize + tileSize/2;\r\n      var tileComp = new component(tx, ty, 16, 16, \"sprite\", \"\", \"\", (tileNum-1)*18, 26, 1);\r\n      tileComp.update();\r\n    }\r\n  }\r\n}\r\n\r\nvar tileChooserCurrentCode = \" \";\r\nvar tileChooserCodes = [\" \", \".\", \"l\", \"m\", \"n\", \"q\", \"p\", \"u\", \"v\", \"w\"];\r\nfunction drawTileChooser() {\r\n  for (var i = 0; i < tileChooserCodes.length; i++) {\r\n    var tileCode = tileChooserCodes[i];\r\n    var tileNum = tileCodeToTileNum[tileCode];\r\n    var tx = 120 + i * (tileSize + 8);\r\n    var ty = tileSize/2 + 6;\r\n    var tileBorderColour = (tileCode === tileChooserCurrentCode) ? \"#ff8888\" : \"#dddddd\";\r\n    var tileBorder = new component(tx, ty, 20, 20, \"rect\", tileBorderColour);\r\n    tileBorder.update();\r\n    if (tileBorder.isClicked()) {\r\n      tileChooserCurrentCode = tileCode;\r\n    }\r\n    var tileComp = new component(tx, ty, 16, 16, \"sprite\", \"\", \"\", (tileNum-1)*9, 26, 2);\r\n    tileComp.update();\r\n  }\r\n}\r\n\r\nfunction drawChosenTile() {\r\n  if (myGameArea.mousePosition) {\r\n    var x = myGameArea.mousePosition.x;\r\n    var y = myGameArea.mousePosition.y - topBarSize;\r\n    var row = Math.floor(y / tileSize);\r\n    var col = Math.floor(x / tileSize);\r\n    if (row <= 0 || row >= roomStore.numRows - 1) return;\r\n    if (col <= 0 || col >= roomStore.numCols - 1) return;\r\n    var tx = col * tileSize + tileSize/2;\r\n    var ty = topBarSize + row * tileSize + tileSize/2;\r\n    var tileNum = tileCodeToTileNum[tileChooserCurrentCode];\r\n    var tileBorderColour = \"#ff8888\";\r\n    var tileBorder = new component(tx, ty, 20, 20, \"rect\", tileBorderColour);\r\n    tileBorder.update();\r\n    if (tileBorder.isClicked()) {\r\n      roomStore.editTileCode(row, col, tileChooserCurrentCode);\r\n    }\r\n    var tileComp = new component(tx, ty, 16, 16, \"sprite\", \"\", \"\", (tileNum-1)*9, 26, 2.5);\r\n    tileComp.update();\r\n  }\r\n}\r\n\r\nfunction updateGameArea() {\r\n\r\n    myGameArea.clear();\r\n\r\n    if (!roomStore.isLoaded) {\r\n      myScore.text = \"Loading ...\";\r\n      myScore.update();\r\n      return;\r\n    }\r\n\r\n    if (editMode) {\r\n      myScore.text = \"Edit Mode\";\r\n      myScore.update();\r\n      drawTileChooser();\r\n      drawTiles();\r\n      drawChosenTile();\r\n      return;\r\n    }\r\n\r\n    myGameArea.frameNo += 1;\r\n\r\n    const motionDir = directions.fromArrows(\r\n      controlStates[\"left\"] || myControlLeft.isClicked(),\r\n      controlStates[\"right\"] || myControlRight.isClicked(),\r\n      controlStates[\"up\"] || myControlUp.isClicked(),\r\n      controlStates[\"down\"] || myControlDown.isClicked()\r\n    );\r\n    if (!directions.isNone(motionDir)) {\r\n      currentVelocity += 0.25;\r\n      if (currentVelocity > maxVelocity) {\r\n        currentVelocity = maxVelocity;\r\n      }\r\n    } else {\r\n      currentVelocity = initialVelocity;\r\n    }\r\n\r\n    const newPose = tilePaths.move(currentPose, tileSettings, tileCodeProvider, motionDir, currentVelocity);\r\n    currentPose = newPose;\r\n    segmentTrain.reportCurrentHeadPose(currentPose);\r\n    const segmentPoses = segmentTrain.getSegmentPoses(6);\r\n\r\n    poseComponent(myGamePiece1, currentPose);\r\n\r\n    myScore.text = roomStore.roomName;\r\n    drawTiles();\r\n    myScore.update();\r\n\r\n    myGamePiece2.spriteX = 21;\r\n    for (let segmentPose of segmentPoses.slice().reverse()) {\r\n      poseComponent(myGamePiece2, segmentPose);\r\n      myGamePiece2.update();\r\n      myGamePiece2.spriteX += 11;\r\n    }\r\n    myGamePiece1.update();\r\n\r\n    myControlUp.update();\r\n    myControlLeft.update();\r\n    myControlRight.update();\r\n    myControlDown.update();\r\n}\r\n\r\nfunction poseComponent(component, pose) {\r\n  component.angle = directions.toRadians(pose.dir);\r\n  component.flip = !directions.areEqual(pose.dir, directions.rotateClockwise(pose.normal, 2));\r\n  const centrePos = directions.translateEuclidean(pose.pos, pose.normal, component.height / 2);\r\n  component.x = centrePos[0];\r\n  component.y = topBarSize + roomStore.numRows * tileSize - centrePos[1];\r\n}\r\n\r\nfunction everyinterval(n) {\r\n    if ((myGameArea.frameNo / n) % 1 == 0) {return true;}\r\n    return false;\r\n}\r\n\r\nwindow.addEventListener('load', startGame, false);\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}